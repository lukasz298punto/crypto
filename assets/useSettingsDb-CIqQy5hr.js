import{r as n,av as y,n as h,X as g,S as o}from"./index-CvPWrnq4.js";function k(){const t=n.useContext(y);if(!t)throw new Error("useSettingsContext should be used within settingsProvider");return t}function C(){const t=k(),a=h(),l=n.useCallback(async({settings:e,onSuccess:i,onError:s})=>{try{const u=await(a==null?void 0:a.settings.findOne(e.key).exec());u?u.update({$set:{value:e.value}}).then(()=>{i&&i()}).catch(c=>{s&&s(c)}):a==null||a.settings.insert({key:e.key,value:e.value}).then(()=>{i&&i()}).catch(c=>{s&&s(c)})}catch(u){s&&s(u)}},[a]),v=n.useMemo(()=>{var e;return(e=g(t,{key:o.Language}))==null?void 0:e.value},[t]),f=n.useMemo(()=>{var e;return(e=g(t,{key:o.Level}))==null?void 0:e.value},[t]),x=n.useMemo(()=>{var e;return(e=g(t,{key:o.NativeLanguage}))==null?void 0:e.value},[t]);return{settings:t,updateSettings:l,language:v,level:f,nativeLanguage:x}}export{C as u};
